(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{548:function(s,n,a){"use strict";a.r(n);var t=a(8),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"控制结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制结构"}},[s._v("#")]),s._v(" 控制结构")]),s._v(" "),a("p",[s._v("程序执行从本质上来说就是两种模式: 顺序和跳转")]),s._v(" "),a("ul",[a("li",[s._v("顺序就是按照程序指令在存储器上的存放顺序逐条执行")]),s._v(" "),a("li",[s._v("跳转就是遇到跳转指令就跳转到某处继续线性执行")])]),s._v(" "),a("h2",{attrs:{id:"if-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-语句"}},[s._v("#")]),s._v(" if 语句")]),s._v(" "),a("ol",[a("li",[s._v("if 语句后面的条件判断子句不需要用小括号")]),s._v(" "),a("li",[s._v("{必须放在行尾，和 if 或 if else 放在一行")]),s._v(" "),a("li",[s._v("if 后面可以带简单的初始化语句，分号分隔，该简单语句声明的变量作用域整个 if 语句块，包括后面的 if else 或者 else 分支")]),s._v(" "),a("li",[s._v("go 语言没有条件运算符")]),s._v(" "),a("li",[s._v("if 分支语句遇到 return 后直接返回")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package main\n\nimport "fmt"\n\nfunc main() {\n x := 1\n y := 10\n if x < y {\n  fmt.Println("if简单语句执行成功")\n }\n if z := 101; z > y {\n  fmt.Println("if初始化语句声明变量z")\n }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h2",{attrs:{id:"switch-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch-语句"}},[s._v("#")]),s._v(" switch 语句")]),s._v(" "),a("p",[s._v("switch 语句会根据传入的参数检测并执行符合条件的分支")]),s._v(" "),a("p",[s._v("其他特点和 if 语句基本一致")]),s._v(" "),a("p",[s._v("支持 default 语句")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package main\n\nimport "fmt"\n\nfunc main() {\n score := 85\n switch {\n case score >= 90:\n  fmt.Println("90分以上得分A")\n case score >= 80:\n  fmt.Println("80分以上得分B")\n case score >= 70:\n  fmt.Println("70分以上得分C")\n }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h2",{attrs:{id:"for-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-语句"}},[s._v("#")]),s._v(" for 语句")]),s._v(" "),a("p",[s._v("for 循环语句")]),s._v(" "),a("p",[s._v("支持对数组、切片、字符串、map 和通道的访问")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package main\n\nimport "fmt"\n\nfunc funcDemo(args ...int) {\n for i := 0; i < len(args); i++ {\n  fmt.Println(i, args[i])\n }\n // range 默认返回两个值,下标和值类似python的enumerate\n for index, value := range args {\n  fmt.Println(index, value)\n }\n // for 循环后面为空则表示死循环\n //for {\n //\n //}\n\n //对于 map 类型来说，for range 遍历时，key 和 value 分别代表 map 的索引键 key 和索引对应的值，\n //一般被称为 map 的键值对，因为它们是一对一对出现的，下面的代码演示了如何遍历 map。\n m := map[string]int{\n  "hello": 100,\n  "world": 200,\n }\n for key, value := range m {\n  fmt.Println(key, value)\n }\n}\nfunc main() {\n funcDemo(1, 2, 3)\n //fmt.Println(key, value)\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("h2",{attrs:{id:"标签和跳转"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标签和跳转"}},[s._v("#")]),s._v(" 标签和跳转")]),s._v(" "),a("p",[s._v("goto、break、continue")]),s._v(" "),a("p",[s._v("go 语言使用标签 Label 来标识一个语句的位置、用于关键字跳转")]),s._v(" "),a("p",[s._v("goto 用于函数的内部的跳转，需要配合标签一起使用")]),s._v(" "),a("h3",{attrs:{id:"goto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#goto"}},[s._v("#")]),s._v(" goto")]),s._v(" "),a("p",[a("code",[s._v("goto Label")])]),s._v(" "),a("ul",[a("li",[s._v("goto 只能在函数内跳转")]),s._v(" "),a("li",[s._v("goto 不能跳过内部变量声明语句，这些变量在 goto 语句的标签语句处又是可见的")]),s._v(" "),a("li",[s._v("goto 只能跳到统计作用域或者上层作用域，不能跳到内部作用域内的标签")])]),s._v(" "),a("h3",{attrs:{id:"break"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#break"}},[s._v("#")]),s._v(" break")]),s._v(" "),a("p",[s._v("用于函数内跳出 for、switch、select 语句的执行")]),s._v(" "),a("ul",[a("li",[s._v("单独使用，直接跳出 for、switch、select 语句的执行")]),s._v(" "),a("li",[s._v("配合 Label，用于跳出标签所标识的 for、switch、select 语句块的执行")])]),s._v(" "),a("h3",{attrs:{id:"continue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#continue"}},[s._v("#")]),s._v(" continue")]),s._v(" "),a("p",[s._v("用于跳出 for 循环的本次迭代，跳到下一次迭代的 post 语句处执行")]),s._v(" "),a("ul",[a("li",[s._v("单独使用，用于跳出 for 循环的本次迭代")]),s._v(" "),a("li",[s._v("配合 Label，用于跳出标签标识的 for 循环的本次迭代，标签和 continue 必须在同一个函数内")])]),s._v(" "),a("h3",{attrs:{id:"return-和函数调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#return-和函数调用"}},[s._v("#")]),s._v(" return 和函数调用")])])}),[],!1,null,null,null);n.default=e.exports}}]);
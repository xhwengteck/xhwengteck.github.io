(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{546:function(s,a,n){"use strict";n.r(a);var e=n(8),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"基本数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[s._v("#")]),s._v(" 基本数据类型")]),s._v(" "),n("p",[s._v("Go是一种强类型的静态编译语言，类型是高级语言的基础。有了类型高级语言才能对不同的类型抽象出不同的运算，编程者才能在更高的抽象层次上操纵数据，而不用关注具体存储和计算细节。")]),s._v(" "),n("h3",{attrs:{id:"go内置七个基本数据类型-20个子类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#go内置七个基本数据类型-20个子类型"}},[s._v("#")]),s._v(" Go内置七个基本数据类型(20个子类型)")]),s._v(" "),n("ul",[n("li",[s._v("布尔类型")]),s._v(" "),n("li",[s._v("整型")]),s._v(" "),n("li",[s._v("浮点型")]),s._v(" "),n("li",[s._v("复数")]),s._v(" "),n("li",[s._v("字符")]),s._v(" "),n("li",[s._v("字符串")]),s._v(" "),n("li",[s._v("错误类型")])]),s._v(" "),n("h3",{attrs:{id:"_1-0-布尔类yushengming型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-布尔类yushengming型"}},[s._v("#")]),s._v(" 1.0. 布尔类yushengming型")]),s._v(" "),n("p",[n("strong",[s._v("布尔类型关键字是bool，布尔类型只有两个值:true和false")])]),s._v(" "),n("p",[s._v("true和false是GO内置的两个预声明标识符")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var ok bool\nok = true\n或者\nok := true // 自动推测类型\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[n("strong",[s._v("布尔类型和整型不能相互转换")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var a = bool\na = 1 // error 1 是整型字面量\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("比较表达式和逻辑表达式的结果都是布尔类型数据")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var b = bool = (x > y) && (x > 0)\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("if和for语句的条件部分一定是布尔类型的值或表达式")]),s._v("****")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("if a < = b {\nprint(b)\n  else{\nprint(a)\n}\nfor ;true //等价于C语言的while\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[n("strong",[s._v("声明的布尔类型变量如不指定初始化值，则默认为false")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var b = bool // b is false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"_1-1-整型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-整型"}},[s._v("#")]),s._v(" 1.1. 整型")]),s._v(" "),n("p",[s._v("Go内置了12种整数类型")]),s._v(" "),n("p",[n("strong",[s._v("不同类型的整型必须进行强制类型转换")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var a  int = 1\nvar b int32 = 2\nb = a // error\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("strong",[s._v("整型支持算术运算符和位操作，算术表达式和位操作表达式的结果还是整型")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var a int = (1+2)*3\nvar b int = 1000>>2\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"_1-2-浮点型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-浮点型"}},[s._v("#")]),s._v(" 1.2. 浮点型")]),s._v(" "),n("p",[s._v("浮点型用于表示包含小数点的数据，GO内置两种浮点型，float32和float64")]),s._v(" "),n("ul",[n("li",[s._v("浮点型数字面量会被自动类型推断为float64类型 （var b := 10.00）")]),s._v(" "),n("li",[s._v("计算机很难进行浮点数的精确表示和存储，因此两个浮点数不应该使用==或者!=进行比较操作，高精度科学计算应该使用math标准库")])]),s._v(" "),n("h3",{attrs:{id:"_1-3-复数类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-复数类型"}},[s._v("#")]),s._v(" 1.3. 复数类型")]),s._v(" "),n("p",[s._v("Go内置两种复数类型，complex64 和 complex128 ，复数在计算机里面使用两个浮点数表示，实部加虚部")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var value1 complex64 = 3.1 + 5i\n\nvalue2 := 3.1 +6i\n\nGo有三个内置函数处理复数\n\nvar v = complex(2.1,3) // 构造一个复数\na := real(v) // 返回复数的实部\nb := image(v) // 返回复数的虚部\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"_1-4-字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-字符串"}},[s._v("#")]),s._v(" 1.4. 字符串")]),s._v(" "),n("p",[n("strong",[s._v("Go语言将字符串作为一种原生的基本数据类型，字符串的初始化可以使用字符串字面量")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var a = 'hello,world'\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("字符串是常量，可以通过类似数组的索引访问字节单元，但是不能修改某个字节的值")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var a = 'hello,world'\nb := a[0]\na[1] = 'a' //error 因为字符串是常量，不允许被修改\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("字符串转换为切片[]byte(s)，数据量较大时要慎用，每转换一次都需要复制内容")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("a := 'hello,world'\nb := []byte(a)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("字符串尾部不包含NULL字符")])]),s._v(" "),n("p",[n("strong",[s._v("字符串类型底层实现是一个二元的数据结构，一个是指针指向字节组的起点，另一个是长度")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// StringHeader is the runtime representation of a string.\n// It cannot be used safely or portably and its representation may\n// change in a later release.\n// Moreover, the Data field is not sufficient to guarantee the data\n// it references will not be garbage collected, so programs must keep\n// a separate, correctly typed pointer to the underlying data.\ntype StringHeader struct {\n\tData uintptr\n\tLen  int\n}\nstring 类型其实是一个"描述符"，它本身并不真正存储字符串数据，而仅是由一个指向底层存储的指针和字符串的长度字段组成的。下面直观地展示了一个 string 类型变量在 Go 内存中的存储：\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[n("img",{attrs:{src:"https://files.mdnice.com/user/33721/1f366de8-0bfc-4772-8e78-190f3cdfb0df.png",alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("基于字符串创建的切片和原字符一样指向相同的底层字符数组，一样不能修改，对字符串的切片操作返回的子串依然是string，而非slice")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\na := 'hello,world'\nb := a[0:4]\nc := a[1:]\nd :a [:4]\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("strong",[s._v("字符串和切片的转换：可以转成字节数组或转成Unicode的字数组")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\na : 'hello,world'\nb := []byte(a)\nc := []rune(a)\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[n("strong",[s._v("字符串的运算")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("a := 'hello,world'\nb := 'hahahah'\nc := a + b //字符串拼接\nlen(a) //内置函数len()获取字符串长度\n\n支持循环遍历数组\nfor i:=0;i<len(a);i++{\nfmt.Println(a[i])\n}\n\n遍历rune数组\nfor i,v : range d{\nfmt.Println(d[i])\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"_1-5-rune-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-rune-类型"}},[s._v("#")]),s._v(" 1.5. rune 类型")]),s._v(" "),n("p",[s._v("Go语言内置两种字符类型:byte的字节类类型，另一种是表示Unicode编码的字符rune")]),s._v(" "),n("p",[s._v("rune在Go内部是int32的别名，占用4个字节")]),s._v(" "),n("p",[s._v("Go语言默认字符编码就是UTF-8类型的，如果需要特殊的编码转换，需要使用Unicode/UTF-8标准包")])])}),[],!1,null,null,null);a.default=t.exports}}]);